"""added repoid to test_results_model

Revision ID: 2bc1adebc872
Revises: bf5d46d450f5
Create Date: 2024-05-20 00:12:28.376639

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "2bc1adebc872"
down_revision: Union[str, None] = "bf5d46d450f5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "augment_test_results", sa.Column("repo_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None, "augment_test_results", "repo_config", ["repo_id"], ["id"]
    )
    op.add_column("coverage", sa.Column("test_result_id", sa.Integer(), nullable=True))
    op.drop_constraint("coverage_test_result_fkey", "coverage", type_="foreignkey")
    op.create_foreign_key(
        None, "coverage", "augment_test_results", ["test_result_id"], ["id"]
    )
    op.drop_column("coverage", "test_result")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "coverage",
        sa.Column("test_result", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "coverage", type_="foreignkey")
    op.create_foreign_key(
        "coverage_test_result_fkey",
        "coverage",
        "augment_test_results",
        ["test_result"],
        ["id"],
    )
    op.drop_column("coverage", "test_result_id")
    op.drop_constraint(None, "augment_test_results", type_="foreignkey")
    op.drop_column("augment_test_results", "repo_id")
    # ### end Alembic commands ###
